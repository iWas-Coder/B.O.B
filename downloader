#!/bin/bash

tput civis

C_RESET='\033[0m'
C_YELLOW='\033[1;33m'
C_RED='\033[1;31m'

GNU_URL="https://ftpmirror.gnu.org/"
LINUX_URL="https://cdn.kernel.org/pub/linux/kernel/"
MODE=$1


separator () {
  echo -ne "$C_RED"
  printf '%.sâ”€' $(seq 1 $(tput cols))
  echo -ne "$C_RESET"
}


banner () {
  echo -e "${C_YELLOW}[*] $1:${C_RESET}"
}


help_text () {
  echo "usage: ./downloader [-h / --help] <SECTION>"
  echo -e "\tsections:"
  echo -e "\t0 -> Cross-Toolchain"
  echo -e "\t1 -> Temporary-Tools"
  tput cnorm; exit 0
}


cross_toolchain () {
  pushd Cross-Toolchain/src &>/dev/null
  rm -r *
  
  # === PKGs Definition === #
  gnu_pkgs=("binutils/binutils-2.39.tar.gz
         gcc/gcc-12.2.0/gcc-12.2.0.tar.gz
         glibc/glibc-2.36.tar.gz")
  linux_pkgs="v6.x/linux-6.0.tar.gz"
  
  # === PKGs Download === #
  banner "PKGs Download"; separator
  for pkg in $gnu_pkgs; do
    wget "${GNU_URL}${pkg}"
    separator
  done
  wget "${LINUX_URL}v6.x/linux-6.0.tar.gz"
  clear

  # === PKGs Decompression & Extraction === #
  for pkg in $(ls); do
    tar -zxvf $pkg && rm $_
    clear
  done

  popd &>/dev/null
  tput cnorm; exit 0
}


temporary_tools () {
  echo "Not implemented yet!"
  tput cnorm; exit 1
}


case $MODE in
  # === Help === #
  "-h" ) help_text;;
  "--help" ) help_text;;
  
  # === Sections === #
  "0" ) cross_toolchain;;
  "1" ) temporary_tools;;
esac

echo -e "${C_RED}[-] ERROR: Bad arguments! -h/--help to see usage${C_RESET}"
tput cnorm; exit 1

