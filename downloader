#!/bin/bash

tput civis

C_RESET='\033[0m'
C_YELLOW='\033[1;33m'
C_RED='\033[1;31m'

GNU_URL="https://ftpmirror.gnu.org/"
LINUX_URL="https://cdn.kernel.org/pub/linux/kernel/"
FILE_URL="https://astron.com/pub/"
XZ_URL="https://tukaani.org/"

MODE=$1


separator () {
  echo -ne "$C_RED"
  printf '%.sâ”€' $(seq 1 $(tput cols))
  echo -ne "$C_RESET"
}


banner () {
  echo -e "${C_YELLOW}[*] $1:${C_RESET}"
}


help_text () {
  echo "usage: ./downloader [-h / --help] [--clean-sources] <SECTION>"
  echo -e "\tsections:"
  echo -e "\t0 -> Cross-Toolchain"
  echo -e "\t1 -> Temporary-Tools"
  tput cnorm; exit 0
}


clean_sources () {
  rm -rf Cross-Toolchain/src/*
  rm -rf Temporary-Tools/src/*
  tput cnorm; exit 0
}


cross_toolchain () {
  pushd Cross-Toolchain/src &>/dev/null
  rm -rf *
  
  # === PKGs Definition === #
  gnu_pkgs=("binutils/binutils-2.39.tar.gz
             gcc/gcc-12.2.0/gcc-12.2.0.tar.gz
             glibc/glibc-2.36.tar.gz")
  linux_pkg="v6.x/linux-6.0.tar.gz"
  
  # === PKGs Download === #
  banner "PKGs Download"; separator
  for pkg in $gnu_pkgs; do
    wget "${GNU_URL}${pkg}"
    separator
  done
  wget "${LINUX_URL}${linux_pkg}"
  clear
  
  # === PKGs Decompression & Extraction === #
  for pkg in $(ls); do
    tar -zxvf $pkg && rm $_
    clear
  done
  
  popd &>/dev/null
  tput cnorm; exit 0
}


temporary_tools () {
  pushd Temporary-Tools/src &>/dev/null
  rm -rf *
  
  # === PKGs Definition === #
  gnu_pkgs=("m4/m4-1.4.19.tar.gz
             ncurses/ncurses-6.3.tar.gz
             bash/bash-5.1.16.tar.gz
             coreutils/coreutils-9.1.tar.gz
             diffutils/diffutils-3.8.tar.xz
             findutils/findutils-4.9.0.tar.xz
             gawk/gawk-5.1.1.tar.gz
             grep/grep-3.7.tar.gz
             gzip/gzip-1.12.tar.gz
             make/make-4.3.tar.gz
             patch/patch-2.7.6.tar.gz
             sed/sed-4.8.tar.gz
             tar/tar-1.34.tar.gz
             binutils/binutils-2.39.tar.gz
             gcc/gcc-12.2.0/gcc-12.2.0.tar.gz")
  file_pkg="file/file-5.42.tar.gz"
  xz_pkg="xz/xz-5.2.6.tar.gz"
  
  # === PKGs Download === #
  banner "PKGs Download"; separator
  for pkg in $gnu_pkgs; do
    wget "${GNU_URL}${pkg}"
    separator
  done
  wget "${FILE_URL}${file_pkg}"
  separator
  wget "${XZ_URL}${xz_pkg}"
  clear
  
  # === PKGs Decompression & Extraction === #
  for pkg in $(ls | grep ".gz"); do
    tar -zxvf $pkg && rm $_
    clear
  done
  for pkg in $(ls | grep ".xz"); do
    tar -Jxvf $pkg && rm $_
    clear
  done
  
  popd &>/dev/null
  tput cnorm; exit 0
}


case $MODE in
  # === Help === #
  "-h" ) help_text;;
  "--help" ) help_text;;
  
  "--clean-sources" ) clean_sources;;
  
  # === Sections === #
  "0" ) cross_toolchain;;
  "1" ) temporary_tools;;
esac

echo -e "${C_RED}[-] ERROR: Bad arguments! -h/--help to see usage${C_RESET}"
tput cnorm; exit 1
